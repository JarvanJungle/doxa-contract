
server.port = 80
spring.application.name = doxa-contract
spring.cloud.service-registry.auto-registration.enabled=false
eureka.client.enabled=false
eureka.client.serviceUrl.registerWithEureka=false

# Disable zipkin
spring.zipkin.enabled=false

# disable for local development
spring.cloud.kubernetes.discovery.enabled=true
#spring.cloud.kubernetes.config.name=

# Jpa
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/contract
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PWD}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.liquibase.change-log=classpath:/db/liquibase/changelogs/db.changelog-master.xml
spring.liquibase.database-change-log-lock-table=liquibase-lock
spring.liquibase.database-change-log-table=liquibase-changelog
spring.liquibase.default-schema=public
spring.liquibase.drop-first=false
spring.liquibase.enabled=true
spring.liquibase.test-rollback-on-update=false
spring.liquibase.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/contract
spring.liquibase.user=${DB_USER}
spring.liquibase.password=${DB_PWD}

# Rabbitmq
spring.rabbitmq.addresses=amqps://${RABBIT_MQ_USER}:${RABBIT_MQ_PWD}@${RABBIT_MQ_HOST}:${RABBIT_MQ_PORT}/${VHOST}

# for oauth
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://oauth-service
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://oauth-service/jwks

# Redis
doxa.redis.host=${REDIS_HOST}
doxa.redis.port=${REDIS_PORT}
doxa.redis.ttl-in-seconds=300
spring.data.redis.repositories.enabled=false
# Disable rabbitmq health check
management.health.rabbit.enabled=false
#disable redis health check (redis cache is optional)
management.health.redis.enabled=false

#EmailNotification
doxa.email.hyperlink-host=${EMAIL_HYPERLINK_HOST}

logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO